Test pedido
===========
0 = [a]
1 = [b]
2 = [c]
3 = [d]
4 = [e]
5 = [f]
6 = [g]
7 = [h]
8 = [i]
9 = [j]
10 = [k]
11 = [l]
12 = [m]
13 = [n]
14 = [o]
15 = [p]
16 = [q]
17 = [r]
18 = [s]
19 = [t]
20 = [u]
21 = [v]
22 = [w]
23 = [x]
24 = [y]
25 = [z]
26 = [V]
27 = [W]
28 = [X]
29 = [Y]
30 = [Z]
31 = [:]
32 = [;]

string
======
# strLen
len(esto es una prueba) = 18
len() = 0
# strClone
strClone(hola manola) = hola manola
# strCmp
strCmp(a, b) = 1
strCmp(w, a) = -1
strCmp(x, x) = 0
strCmp(abcde, abcd) = -1
strCmp(abc, abcd) = 1
strCmp(abcdef, ) = -1
strCmp(, abcdef) = 1
# strConcat
strConcat(a, a) = aa
strConcat(abas, hola espacio) = abashola espacio
strConcat(aa, aa) = aaaa
strConcat(aa, ) = aa
# strPrint
hola hola
NULL
# strSubstring
strSubstring('ABC', 1, 1) = B
strSubstring('ABC', 10, 0) = ABC
strSubstring('ABC', 2, 10) = C

list
====
# listAddFirst
[]
[pepe]
[muy atento,pepe]
# listAddLast
[]
[pepe]
[pepe,muy atento]
# listAdd
[]
[b]
[b,w]
[b,j,w]
[a,b,j,w]
# listRemoveFirst
[primero,segundo,tercero]
[segundo,tercero]
[tercero]
[]
# listRemoveLast
[primero,segundo,tercero]
[primero,segundo]
[primero]
[]
# listRemove
[a,b,a,a,d,d,a,a,e,a]
[b,d,d,e]
# listDelete
[a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a]
# listPrintReverse
[a,b,c,d,e,f,g,h,i,j]
[j,i,h,g,f,e,d,c,b,a]
# _listClear
[a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a,a]
[]

hash table
==========
# hashTableNew
0 = []
1 = []
2 = []
3 = []
4 = []
# hashTableAdd
0 = [pepe]
1 = []
2 = []
# hashTableDeleteSlot
0 = [abeja,pepe,moby,verde]
1 = [beba,hoja]
2 = [flor,rojo]
0 = []
1 = [beba,hoja]
2 = [flor,rojo]
0 = []
1 = []
2 = [flor,rojo]
0 = []
1 = []
2 = []
